---

# file: playbooks/roles/web/tasks/serf.yml

- name: serf group
  action: group name={{ item }} state=present
  with_items:
    - "{{ conf_serf_group }}"
  tags: [ serf ]

- name: perlbal group
  action: group name={{ item }} state=present
  with_items:
    - "{{ conf_serf_perlbal_group }}"
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: serf system user
  user: name={{ item }} group={{ conf_serf_group }} comment="Serf System User" system=yes state=present
  with_items:
    - "{{ conf_serf_user }}"
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: perlbal system user
  user: name={{ item }} group={{ conf_serf_perlbal_group }} comment="Perlbal System User" system=yes state=present
  with_items:
    - "{{ conf_serf_perlbal_user }}"
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: install perl dependencies (Debian family)
  apt: pkg={{ item }} state=latest
  with_items:
    - cpanminus
    - libperl-dev
    - perl-doc
    - libssl-dev
    - libdevel-stacktrace-perl
    - libclass-data-inheritable-perl
    - libcrypt-openssl-rsa-perl
    - libcrypt-x509-perl
    - libexception-class-perl
    - libjson-perl
    - libpath-class-perl
    - libtry-tiny-perl
    - libcrypt-ssleay-perl
    - libuuid-perl
    - libpath-class-perl
    - libdata-dump-perl
    - libsoap-lite-perl
    - libxml-sax-perl
    - libxml-namespacesupport-perl
    - libxml-libxml-perl
    - libmodule-build-perl
    - libnet-inet6glue-perl
    - libclass-methodmaker-perl
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: conf_comet_enable is defined and conf_comet_enable == true and ansible_os_family == "Debian"
  tags: [ serf ]

- name: Install perlbal
  cpanm:
    name: IO::AIO Perlbal::XS::HTTPHeaders
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: Create /var/empty
  file:
    path: /var/empty
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
    state: directory
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: Create /etc/perlbal
  file:
    path: /etc/perlbal
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
    state: directory
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: Create /usr/share/perl5/Perlbal/Plugin/
  file:
    path: /usr/share/perl5/Perlbal/Plugin/
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
    state: directory
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf ]

- name: create /etc/serf
  file: path={{ item }} state=directory owner=root group={{ conf_root_group }} mode=0755
  with_items:
    - /etc/serf
  tags: [ serf, serf-conf ]

- name: provision configs
  template: src=etc/{{ item }}.j2 dest={{ conf_local_etc_path }}/{{ item }} owner=root group={{ conf_root_group }} mode=0644
  with_items:
      - serf/serf.conf
      - serf/serfmon.ini
  # notify: handle_restart_serf
  tags: [ serf, serf-conf ]

- name: provision comit configs
  template: src=etc/{{ item }}.j2 dest={{ conf_local_etc_path }}/{{ item }} owner=root group={{ conf_root_group }} mode=0644
  with_items:
      - perlbal/stream.conf
  # notify: handle_restart_serf
  when: conf_comet_enable is defined and conf_comet_enable == true
  tags: [ serf, serf-conf ]

- name: Download serf
  get_url: url={{ conf_serf_download_url }} dest={{ conf_serf_download_dir }}/serf_{{ conf_serf_version }}_{{ conf_serf_arch }}.zip
  tags: [ serf ]

- name: Check if serf is installed
  command: "{{ conf_serf_exe }} --version"
  register: is_installed
  ignore_errors: True
  changed_when: False
  tags: [ serf ]

- name: Test serf version
  shell: "{{ conf_serf_exe }} --version | grep Serf | sed -e 's/Serf v//'"
  register: has_version
  ignore_errors: True
  when: is_installed|success
  changed_when: False
  tags: [ serf ]

- name: Push and unzip serf {{ conf_serf_version }} executable to /usr/local/bin
  unarchive: src={{ conf_serf_download_dir }}/serf_{{ conf_serf_version }}_{{ conf_serf_arch }}.zip dest=/usr/local/bin copy=no owner=root group={{ conf_root_group }} mode=0755
  when: is_installed|failed or has_version.stdout != conf_serf_version
  tags: [ serf ]

# - name: provision configs
#   template: src=etc/{{ item }}.j2 dest={{ conf_local_etc_path }}/{{ item }} owner=root group={{ conf_root_group }} mode=0644
#   with_items:
#       - serf/serf.conf
#       - serf/serfmon.ini
#       - perlbal/stream.conf
#   when:
#     - conf_serf_script_enable is defined and conf_serf_script_enable == true
#   tags: [ serf ]
