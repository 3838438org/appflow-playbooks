---

# file: playbooks/roles/db/tasks/cassandra.yml

- name: install cassandra gpg key (Debian Family)
  apt_key: keyserver={{ conf_cassandra_gpg_keyserver }} id='{{ conf_cassandra_gpg_key_id }}' state=present
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: add cassandra deb repository (Debian Family)
  apt_repository: repo='deb http://www.apache.org/dist/cassandra/debian {{ conf_cassandra_series_version }} main' state=present
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: add Oracle Java 8 (Debian Family)
  apt_repository: repo='ppa:webupd8team/java' update_cache=yes state=present
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: accept Oracle Java 8 License (Debian Family)
  become: yes
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value=true vtype=select
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: install Oracle Java 8 (Debian Family)
  apt: name="{{ item }}" state=latest
  with_items:
    - oracle-java8-installer
    - ca-certificates
    - oracle-java8-set-default
    - cassandra
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: install cassandra python driver via pip
  pip: name=cassandra-driver
  when: ansible_os_family == "Debian"
  tags: [ cassandra ]

- name: provision cassandra configs
  template: src=etc/{{ item }}.j2 dest={{ conf_local_etc_path }}/{{ item }} owner=root group={{ conf_root_group }} mode=0644
  with_items:
      - cassandra/cassandra.yaml
      # - cassandra/cassandra-env.sh
      # - cassandra/cassandra-rackdc.properties
      # - cassandra/cassandra-topology.properties
      # - cassandra/commitlog_archiving.properties
      # - cassandra/jvm.options
      # - cassandra/logback-tools.xml
      # - cassandra/logback.xml
  notify: handle_restart_cassandra
  tags: [ cassandra, cassandra-conf ]

# - name: Wait for cassandra rpc server to become available on port 9042
#   wait_for:
#     port: 9042
#     delay: 5
#   tags: [ cassandra ]

- name: import schema
  shell: "export CQLSH_NO_BUNDLED=TRUE ; /usr/bin/cqlsh -f /tmp/cassandra_schema.cql"
  args:
    executable: /bin/bash
  register: command_result
  failed_when: "'refused' in command_result.stderr"
  tags: [ cassandra ]
