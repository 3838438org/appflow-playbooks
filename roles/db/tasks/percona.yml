---

# file: playbooks/roles/db/tasks/percona.yml

#
# Debug CentOS:
#   yum -y remove Percona-XtraDB-Cluster-galera-3.x86_64 ; rm -rf /var/lib/mysql /etc/mysql/my.cnf /etc/my.cnf ~/.my.cnf ; killall -9 mysqld
#
# - install PXC on all
# - ? /etc/my.cnf
# - bootstrap master
# - start clients
# - restart master

- name: apparmor disable mysqld (Debian family)
  file: src=/etc/apparmor.d/usr.sbin.mysqld dest=/etc/apparmor.d/disable/usr.sbin.mysqld state=link force=yes
  notify: handle_reload_apparmor_mysql
  ignore_errors: yes
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: check to determine if galera is aready installed (Debian family)
  shell: "dpkg-query -s percona-xtradb-cluster-galera-3.x"
  ignore_errors: yes
  register: bootstrap_check_debian
  check_mode: no
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: check to determine if galera is already installed (RedHat family)
  shell: "yum -q list installed Percona-XtraDB-Cluster-56 > /dev/null"
  register: bootstrap_check_redhat
  check_mode: no
  ignore_errors: yes
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- debug: var=bootstrap_check_debian.rc
  tags: [ mysql, percona ]

- debug: var=bootstrap_check_redhat.rc
  tags: [ mysql, percona ]

- name: percona apt-key (Debian family)
  # apt_key: url=http://www.percona.com/redir/downloads/RPM-GPG-KEY-percona state=present
  apt_key: data="{{ lookup('file', 'percona/percona.gpg') }}" state=present
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: percona repo (Debian family)
  apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_distribution_release }} main' update_cache=yes
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: percona repo (RedHat family)
  yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm state=present
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- name: remove conflicting MySQL packages (Debian family)
  apt: pkg={{ item }} state=absent
  with_items:
    - mysql-server-core-5.5
    - mysql-client-core-5.5
    - mysql-client-5.5
    - mysql-server-5.6
    - mysql-common-5.6
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: Prepare for bootstrap (gcomm) (Debian family)
  lineinfile: "dest=/etc/mysql/my.cnf regexp='^wsrep_cluster_address' line='wsrep_cluster_address = gcomm://' state=present"
  when: bootstrap_check_debian.rc == 1 and conf_wsrep_master is defined and conf_wsrep_master == true and ansible_os_family == "Debian"
  tags: [ mysql, percona]

- name: Prepare for bootstrap (sst) (Debian family)
  lineinfile: "dest=/etc/mysql/my.cnf regexp='^wsrep_sst_auth' line='wsrep_sst_auth = deploy' state=present"
  when: bootstrap_check_debian.rc == 1 and conf_wsrep_master is defined and conf_wsrep_master == false and ansible_os_family == "Debian"
  tags: [ mysql, percona]

- name: Prepare for bootstrap (sst) (Debian family)
  lineinfile: "dest=/etc/mysql/my.cnf regexp='^wsrep_sst_method' line='wsrep_sst_method = rsync' state=present"
  when: bootstrap_check_debian.rc == 1 and conf_wsrep_master is defined and conf_wsrep_master == false and ansible_os_family == "Debian"
  tags: [ mysql, percona]

- name: Prepare for bootstrap (mysql dir) (Debian family)
  file: path=/var/lib/mysql state=directory mode=0750
  when: bootstrap_check_debian.rc == 1 and conf_wsrep_master is defined and conf_wsrep_master == true and ansible_os_family == "Debian"
  tags: [ mysql, percona]

- name: install Percona XtraDB Cluster (Debian family)
  apt: pkg={{ item }} state=present force=yes
  with_items:
    - percona-xtradb-cluster-server-5.6
    - percona-xtradb-cluster-client-5.6
    - percona-xtradb-cluster-galera-3.x
    - python-mysqldb
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ mysql, percona ]

- name: install Percona XtraDB Cluster (RedHat family)
  yum: pkg={{ item }} state=latest
  with_items:
     - Percona-XtraDB-Cluster-56
     - MySQL-python
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- name: symlink libgalera_smm.so
  file: src={{ conf_lib_path }}/galera3/libgalera_smm.so dest={{ conf_lib_path }}/libgalera_smm.so state=link
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona]

- name: install xinetd (Debian family)
  apt: pkg={{ item }} state=latest force=yes
  with_items:
    - xinetd
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  ignore_errors: yes
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/services (Debian family)
  lineinfile: "dest=/etc/services line='mysqlchk        9200/tcp                        # mysqlchk' insertafter='^xinetd' state=present"
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/xinetd.d/mysqlchk (Debian family)
  lineinfile: "dest=/etc/xinetd.d/mysqlchk line='        server_args = {{ conf_mysql_clustercheck_user }} {{ conf_mysql_clustercheck_password }} {{ conf_mysql_clustercheck_available_when_donor }} /dev/null 0' insertafter='^        # 55-to-56 upgrade' state=present"
  notify: handle_restart_xinetd
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: bootstrap-pxc (RedHat family)
  service: name=mysql@bootstrap state=restarted
  when: bootstrap_check_redhat.rc is defined and bootstrap_check_redhat.rc == 1 and conf_wsrep_master == true and ansible_os_family == "RedHat"
  # delegate_to: db1
  ignore_errors: true
  tags: [ mysql, percona]

- name: bootstrap-pxc (RedHat family)
  service: name=mysql@bootstrap state=restarted
  when: bootstrap_check_redhat.rc is defined and bootstrap_check_redhat.rc == 1 and conf_wsrep_master == true and ansible_os_family == "RedHat"
  # delegate_to: db1
  tags: [ mysql, percona]
