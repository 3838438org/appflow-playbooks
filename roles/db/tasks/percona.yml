---

# file: playbooks/roles/db/tasks/percona.yml

- name: deploy /usr/local/bin/galeranotify.py
  template: src=usr/local/bin/galeranotify.py.j2 dest=/usr/local/bin/galeranotify owner=root group={{ conf_root_group }} mode=0755
  tags: [ mysql, percona ]

- name: apparmor disable mysqld
  file: src=/etc/apparmor.d/usr.sbin.mysqld dest=/etc/apparmor.d/disable/usr.sbin.mysqld state=link force=yes
  notify: handle_reload_apparmor_mysql
  ignore_errors: yes
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: check to determine if galera is aready installed (Debian)
  # shell: dpkg-query -s percona-xtradb-cluster-galera-3.x &>/dev/null && echo "installed" || echo "bootstrap"
  # shell: dpkg-query -l | grep percona-xtradb-cluster-galera-3.x &>/dev/null && echo "installed" || echo "bootstrap"
  shell: "dpkg-query -s percona-xtradb-cluster-galera-3.x"
  ignore_errors: yes
  register: bootstrap_check_deb
  always_run: yes
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: check to determine if galera is aready installed (RedHat Family)
  shell: "rpm -q Percona-XtraDB-Cluster-galera-3"
  ignore_errors: yes
  register: bootstrap_check_rpm
  always_run: yes
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

# - name: Display all variables/facts known for a host
#   debug: bootstrap_check=bootstrap_check
#   when: bootstrap_check is defined
#   always_run: yes
#   tags: [ mysql, percona ]
#   debug: var=bootstrap_check.rc

# - name: Display all variables/facts known for a host (Debian)
#   debug: bootstrap_check=bootstrap_check
#   when: bootstrap_check is defined
#   always_run: yes
#   tags: [ mysql, percona ]

# - name: Display all variables/facts known for a host (RedHat)
#   debug: bootstrap_check_rpm=bootstrap_check
#   when: bootstrap_check_rpm is defined
#   always_run: yes
#   tags: [ mysql, percona ]

- name: percona apt-key (Debian family)
  # apt_key: url=http://www.percona.com/redir/downloads/RPM-GPG-KEY-percona state=present
  apt_key: data="{{ lookup('file', 'percona/percona.gpg') }}" state=present
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: percona repo (Debian family)
  apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_distribution_release }} main' update_cache=yes
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: remove conflicting MySQL packages (Debian family)
  apt: pkg={{ item }} state=absent
  with_items:
    - mysql-server-core-5.5
    - mysql-client-core-5.5
    - mysql-client-5.5
    - mysql-server-5.6
    - mysql-common-5.6
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian"
  tags: [ mysql, percona ]

- name: remove conflicting MySQL packages (RedHat family)
  yum: pkg={{ item }} state=absent
  with_items:
    - mysql-community-client
    - mysql-community-server
    - mysql-community-common
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- name: Check if Percona repo is already configured.
  stat: path={{ percona_repofile_path }}
  register: percona_repofile_result
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- name: Install Percona repo (RedHat Family)
  yum:
    name: "{{ percona_repo_url }}"
    state: present
  register: result
  until: '"failed" not in result'
  retries: 5
  delay: 10
  when: ansible_os_family == "RedHat" and not percona_repofile_result.stat.exists
  tags: [ mysql, percona ]

- name: install Percona XtraDB Cluster (Debian family)
  apt: pkg={{ item }} state=present force=yes
  with_items:
    - percona-xtradb-cluster-server-5.6
    - percona-xtradb-cluster-client-5.6
    - percona-xtradb-cluster-galera-3.x
    - python-mysqldb
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ mysql, percona ]

- name: install xinetd (Debian family)
  apt: pkg={{ item }} state=latest force=yes
  with_items:
    - xinetd
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  ignore_errors: yes
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/services (Debian family)
  lineinfile: "dest=/etc/services line='mysqlchk        9200/tcp                        # mysqlchk' insertafter='^xinetd' state=present"
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/xinetd.d/mysqlchk (Debian family)
  lineinfile: "dest=/etc/xinetd.d/mysqlchk line='        server_args = {{ conf_mysql_clustercheck_user }} {{ conf_mysql_clustercheck_password }} {{ conf_mysql_clustercheck_available_when_donor }} /dev/null 0' insertafter='^        # 55-to-56 upgrade' state=present"
  notify: handle_restart_xinetd
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: install Percona XtraDB Cluster (RedHat family)
  yum: pkg={{ item }} state=latest
  with_items:
    - Percona-XtraDB-Cluster-galera-3
    - Percona-XtraDB-Cluster-client-56
    - Percona-XtraDB-Cluster-server-56
    - Percona-XtraDB-Cluster-shared-56
    - MySQL-python
  when: ansible_os_family == "RedHat"
  ignore_errors: yes
  tags: [ mysql, percona ]

- name: install xinetd (RedHat family)
  yum: pkg={{ item }} state=installed
  with_items:
    - xinetd
  when: ansible_os_family == "RedHat" and conf_env != "development" and conf_galera_cluster == true
  ignore_errors: yes
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/services (RedHat family)
  lineinfile: "dest=/etc/services line='mysqlchk        9200/tcp                        # mysqlchk' insertafter='^xinetd' state=present"
  when: ansible_os_family == "RedHat" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: update /etc/xinetd.d/mysqlchk (RedHat family)
  lineinfile: "dest=/etc/xinetd.d/mysqlchk line='        server_args = {{ conf_mysql_clustercheck_user }} {{ conf_mysql_clustercheck_password }} {{ conf_mysql_clustercheck_available_when_donor }} /dev/null 0' insertafter='^        # 55-to-56 upgrade' state=present"
  notify: handle_restart_xinetd
  when: ansible_os_family == "Debian" and conf_env != "development" and conf_galera_cluster == true
  tags: [ mysql, percona, clustercheck ]

- name: create DB clustercheck user
  mysql_user: check_implicit_admin=yes name={{ conf_mysql_clustercheck_user }} password={{ conf_mysql_clustercheck_password }} host=% priv="*.*:PROCESS" state=present
  when: conf_env != "development" and conf_galera_cluster == true
  ignore_errors: yes
  tags: [ mysql, percona, clustercheck ]

- name: Symlink mysql conf (RedHat Family)
  shell: ln -s -f /etc/my.cnf /etc/mysql/my.cnf
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- name: Symlink mysql usr folder (RedHat Family)
  shell: rm -rf /usr/share/mysql; ln -s -f /usr/share/percona-xtradb-cluster/ /usr/share/mysql
  when: ansible_os_family == "RedHat"
  tags: [ mysql, percona ]

- include: bootstrap.yml
  when: bootstrap_check_deb is defined and bootstrap_check_deb.rc == 1
  tags: [ mysql, percona ]

- include: bootstrap.yml
  when: bootstrap_check_rpm is defined and bootstrap_check_rpm.rc == 1
  tags: [ mysql, percona ]
