---

# file: playbooks/roles/common/tasks/main.yml

# - include: net.yml
#   tags: [ common ]

- name: set root shell
  user: name=root shell={{ conf_root_shell }}
  tags: [ common, users, shell ]

- include: sudo.yml
  tags: [ common, users, sudo ]

- include: cloud.yml
  when: conf_cloud_env is defined and conf_cloud_enable == true
  tags: [ common ]

- include: centos-epel.yml
  when: ansible_os_family == "RedHat"
  tags: [ common, apt, base_packages ]

- name: template /etc/hosts
  template: src=etc/hosts.j2 dest=/etc/hosts owner=root group={{ conf_root_group }} mode=0644 backup=no
  tags: [ common, hosts ]

- include: etckeeper.yml
  when: conf_etckeeper_webhook_url is defined
  tags: [ common ]

- include: timezone.yml
  tags: [ common ]

- include: rsyslog.yml
  when: conf_rsyslog_enable == true
  tags: [ common, rsyslog ]

- include: lvm.yml
  tags: [ common ]

- include: users.yml
  tags: [ common ]

- name: remove deb-src (Debian family)
  lineinfile: dest=/{{ conf_etc_path }}/apt/sources.list state=absent regexp='^deb-src'
  when: ansible_os_family == "Debian"
  tags: [ common ]

- name: apt-mark hold (Debian family)
  shell: "apt-mark hold {{ item }}"
  with_items: '{{ conf_hold_packages }}'
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  tags: [ common, apt, base_packages ]

- name: purge unwanted packages (Debian family)
  apt: pkg={{ item }} state=absent purge=yes
  with_items: '{{ conf_unwanted_packages }}'
  when: ansible_os_family == "Debian"
  tags: [ common, apt, base_packages ]

# - name: be sure base packages are installed (Ubuntu, 12.04)
#   apt: pkg={{ item }} state=installed
#   with_items:
#     - linux-image-server
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "12.04"
#   tags: [ common, apt, base_packages ]

# - name: be sure base packages are installed (Ubuntu, 14.04)
#   apt: pkg={{ item }} state=installed
#   with_items:
#     - linux-image-virtual
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04"
#   tags: [ common, apt, base_packages ]

- name: base packages (Debian family)
  apt: pkg={{ item }} update_cache=yes state=latest
  with_items: '{{ conf_base_packages }}'
  when: ansible_os_family == "Debian"
  tags: [ common, apt, base_packages ]

#- name: debug
#  debug: var=ansible_distribution var1=ansible_distribution_version
#  tags: [ debug ]

- name: python3-pip (Ubuntu >= 14 or Debian >= 7)
  apt: pkg={{ item }} state=installed
  with_items:
    - python3-pip
  when: (ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int >= 14) or
        (ansible_distribution == "Debian" and ansible_lsb.major_release|int >= 7)
  tags: [ common, apt, base_packages ]

- name: base packages (RedHat/SHMZ family)
  yum: name={{ item }} state=latest
  with_items: '{{ conf_base_packages }}'
  when: ansible_os_family == "RedHat" or ansible_os_family == "SHMZ"
  tags: [ common, apt, base_packages ]

- name: base packages (FreeBSD)
  pkgng: name={{ item }} state=latest cached=yes
  with_items: '{{ conf_base_packages }}'
  when: ansible_distribution == "FreeBSD"
  tags: [ common, pkg, base_packages ]

- name: symlink ccze
  file: src=/usr/local/bin/colorize dest=/usr/local/bin/ccze state=link
  when: ansible_distribution == "FreeBSD"
  tags: [ common, pkg, base_packages ]

- include: nullmailer.yml
  when: conf_nullmailer_enable == true
  tags: [ common ]

# Bash prompt
# - copy: src=../files/profile/nicer-bash-prompt.sh dest=/{{ conf_etc_path }}/profile.d/Z999-nicer-bash-prompt.sh owner=root group={{ conf_root_group }} mode=644
#   when: ansible_os_family == "Debian"
#  tags: [ common, prompt ]

- include: motd.yml
  tags: [ common, motd ]

- include: apticron.yml
  when: ansible_os_family == "Debian"
  tags: [ common ]

# - include: vpn.yml
#   when: conf_vpn_netname is defined
#   tags: [ common ]

# - include: icinga.yml
#   when: conf_icinga_master is defined or conf_icinga_satellite is defined or conf_icinga_client is defined
#   tags: [ common ]

- include: borg.yml
  when: conf_backup_client == true
  tags: [ common ]
