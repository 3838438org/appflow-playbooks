---

# file: playbooks/roles/common/tasks/base_packages.yml

- name: apt-mark hold (Debian family)
  shell: "apt-mark hold {{ item }}"
  with_items: '{{ conf_hold_packages }}'
  when: ansible_os_family == "Debian"
  ignore_errors: yes

- name: purge unwanted packages (Debian family)
  apt: pkg={{ item }} state=absent purge=yes
  with_items: '{{ conf_unwanted_packages }}'
  when: ansible_os_family == "Debian"

- name: install golang ppa (Debian Family)
  apt_repository: repo='ppa:ubuntu-lxc/lxd-stable' update_cache=yes
  when: ansible_distribution == "Ubuntu"

# - name: be sure base packages are installed (Ubuntu, 12.04)
#   apt: pkg={{ item }} state=installed
#   with_items:
#     - linux-image-server
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "12.04"
#

# - name: be sure base packages are installed (Ubuntu, 14.04)
#   apt: pkg={{ item }} state=installed
#   with_items:
#     - linux-image-virtual
#   when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04"
#

- name: base packages (Debian family)
  apt: pkg={{ item }} update_cache=yes state=latest
  with_items: '{{ conf_base_packages }}'
  when: ansible_os_family == "Debian"

#- name: debug
#  debug: var=ansible_distribution var1=ansible_distribution_version
#  tags: [ debug ]

- name: python3-pip (Ubuntu >= 14 or Debian >= 7)
  apt: pkg={{ item }} state=installed
  with_items:
    - python3-pip
  when: (ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int >= 14) or
        (ansible_distribution == "Debian" and ansible_lsb.major_release|int >= 7)

- name: base packages (RedHat/SHMZ family)
  package: name={{ item }} state=latest
  with_items: '{{ conf_base_packages }}'
  when: ansible_os_family == "RedHat" or ansible_os_family == "SHMZ"

- name: base packages (FreeBSD)
  pkgng: name={{ item }} state=latest cached=yes
  with_items: '{{ conf_base_packages }}'
  when: ansible_distribution == "FreeBSD"
  tags: [ common, pkg, base_packages ]

- name: symlink ccze
  file: src=/usr/local/bin/colorize dest=/usr/local/bin/ccze state=link
  when: ansible_distribution == "FreeBSD"
  tags: [ common, pkg, base_packages ]

- name: base packages (Darwin)
  package: name={{ item }} state=latest
  with_items: 
      - '{{ conf_base_packages }}'
      - assh
  become: false
  when: ansible_os_family == "Darwin"
  
  
- name: prepare install assh (Linux)
  lineinfile: dest=/etc/profile line="{{ item }}" state=present insertafter='EOF'
  with_items: 
      - "export GOPATH=/usr/local/go"
      - "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin"
      - "alias ssh='assh wrapper ssh'"
  when: ansible_os_family != "Darwin"
  
- name: prepare install assh for users (Linux)
  lineinfile: dest=/home/{{ item[0] }}/.zshrc line="{{ item[1] }}" state=present insertafter='EOF'
  with_nested:
      - '{{ conf_users }}'
      - ["export GOPATH=/usr/local/go", "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin",  "alias ssh='assh wrapper ssh'"]
  when: ansible_os_family != "Darwin" and conf_env != "local"
  ignore_errors: yes
  
- name: prepare install assh for users (Generic)
  lineinfile: dest=~/{{ item[0] }} line="{{ item[1] }}" state=present insertafter='EOF'
  with_nested: 
      - [".bashrc" , ".zshrc" ]
      - ["export GOPATH=/usr/local/go", "export PATH=$PATH:$GOROOT/bin:$GOPATH/bin",  "alias ssh='assh wrapper ssh'"]
  become: false
  ignore_errors: yes  
  
- name: install assh (Linux)
  shell: "export GOPATH=/usr/local/go; go get -u github.com/moul/advanced-ssh-config/cmd/assh"
  when: ansible_os_family != "Darwin"  
  
