---

# file: playbooks/roles/common/tasks/sudo.yml

#
# See active settings:
#
#   % grep ^[^#\;] /etc/sudoers
#
# Basic idea is to provision a template with visudo check.
#
#   /etc/sudoers
#   /etc/sudoers.d/
#   ├── 00-nagios
#   ├── 10-misc
#   ├── 20-www
#   ├── 90-cloud-init-users
#   └── README
#
#   sudoers.d concept available in:
#
#       - Ubuntu 14.04 LTS
#       - PBX
#

# - name: update sudoers
#   lineinfile: dest=/{{ conf_etc_path }}/sudoers state=present regexp="^%{{ conf_sudo_nopasswd_group }} ALL\=" line="%{{ conf_sudo_nopasswd_group }} ALL=(ALL) NOPASSWD:ALL" validate="visudo -cf %s"
#   tags: sudo

# - name: update sudoers (deploy)
#   lineinfile: dest=/{{ conf_etc_path }}/sudoers state=present line="deploy   ALL=NOPASSWD:/usr/sbin/service memcached restart" validate="visudo -cf %s"
#   tags: sudo

- name: deploy /etc/sudoers
  template: src=etc/sudoers.j2 dest=/etc/sudoers owner=root group={{ conf_root_group }} mode=0440 validate="visudo -cf %s" backup=yes
  when: conf_env != "local"
  tags: [ sudo ]

# - debug: var="conf_sudo.{{ item }}.content"
#   with_items:
#     - 'nagios'
#   when: conf_sudo.{{ item }} is defined
#   tags: debug

# key="{{ lookup('file', "../files/public_key/" + item.key + ".pub") }}" state=presen

# - name: deploy /etc/sudoers.d/
#   template: src=etc/sudoers.d/{{ item }}.j2 dest="/etc/sudoers.d/" + conf_sudo.{{ item }}.order owner=root group={{ conf_root_group }} mode=0440 validate="visudo -cf %s" backup=yes
#   with_items:
#     - nagios
#   when: conf_sudo.{{ item }} is defined
#   tags: [ sudo ]
