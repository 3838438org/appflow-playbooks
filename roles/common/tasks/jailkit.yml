---

# file: playbooks/roles/common/tasks/jailkit_installedyml

#
# This installs jailkit and sets up defined jails.
# wget -c https://olivier.sessink.nl/jailkit/jailkit-2.19.tar.bz2
#

#
# Basic
#
- name: check if jailkit is installed
  stat: path=/usr/sbin/jk_init
  register: jailkit_installed
  failed_when: false
  changed_when: false
  tags: [ jailkit ]

- name: create /tmp/jailkit
  file: path=/tmp/jailkit state=directory mode=0750
  when: not jailkit_installed.stat.exists
  tags: [ jailkit ]

- name: download and unarchive Jailkit
  unarchive:
    src: "{{ conf_jailkit_url }}"
    dest: /tmp/jailkit
    remote_src: true
    extra_opts: ['--strip-components=1']
  when: not jailkit_installed.stat.exists
  tags: [ jailkit ]

- name: "compile Jailkit"
  shell: "{{ item }} chdir=/tmp/jailkit"
  with_items:
    - ./configure
    - make
    - make install
  when: not jailkit_installed.stat.exists
  tags: [ jailkit ]

- block:
  - name: create chroot dirtree if applicable
    file:
      path: "{{ item.value.path }}"
      owner: "{{ item.value.owner }}"
      group: "{{ item.value.group }}"
      mode: "{{ item.value.mode }}"
      recurse: yes
      state: directory
    with_dict: "{{ conf_jails }}"
    when:
      - item.value.path is defined
      - item.value.owner is defined
      - item.value.group is defined
      - item.value.mode is defined
      - item.value.state == "enabled"
    tags: [ jailkit, jails ]

  - name: execute jk_init if applicable
    shell:
      # jk_init {{ item.value.path }} {{ item.value.profile }}
      jk_init {{ item.value.path }} {{ item.value.section }}
    with_dict: "{{ conf_jails }}"
    when:
      - item.value.path is defined
      # - item.value.profile is defined
    tags: [ jailkit, jails ]
    # when: conf_jails is defined